name: Build on Windows with MSVC

inputs:
  version:
    required: true
    description: "Qt long version"
outputs:
  fn:
    description: "Filename"
    value: ${{steps.pack.outputs.fn}}
  path:
    description: "Path"
    value: ${{steps.pack.outputs.path}}

runs:
  using: composite
  steps:
    - name: env
      shell: powershell
      run: |
        $v = '${{inputs.version}}'
        $vv = ($v -split '\.')[0..1] -join '.'
        $os = $env:RUNNER_OS.ToLower()
        $arch = $env:PROCESSOR_ARCHITECTURE.ToLower()
        $vspath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
        Add-Content -Path $env:GITHUB_ENV -Value "v=${v}"
        Add-Content -Path $env:GITHUB_ENV -Value "vv=${vv}"
        Add-Content -Path $env:GITHUB_ENV -Value "os=${os}"
        Add-Content -Path $env:GITHUB_ENV -Value ("arch=" + ($arch -replace '^amd64$', 'x64'))
        Add-Content -Path $env:GITHUB_ENV -Value "vspath=${vspath}"
        Remove-Item C:\mingw64 -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item "C:\Program Files\LLVM" -Recurse -Force -ErrorAction SilentlyContinue
    - name: download and unpack
      shell: powershell
      run: |
        Start-BitsTransfer -Source `
          "https://download.qt.io/archive/qt/${{env.vv}}/${{env.v}}/single/qt-everywhere-src-${{env.v}}.zip" `
          -Destination .
        7z x .\qt-everywhere-src-${{env.v}}.zip -o"./"
        Rename-Item -Path "qt-everywhere-src-${{env.v}}" -NewName "qt"
        mkdir qt\build
    - name: configure
      shell: cmd
      run: |
        call "${{env.vspath}}\VC\Auxiliary\Build\vcvarsall.bat" ${{env.arch}}
        cd qt\build
        ..\configure.bat ^
          -prefix ".\qt${{env.v}}_static_${{env.os}}_msvc2022_${{env.arch}}" ^
          -platform win32-msvc ^
          -release ^
          -static ^
          -opensource ^
          -confirm-license ^
          -nomake examples ^
          -nomake tests ^
          -skip qtwebengine ^
          -no-openssl
    - name: build
      shell: cmd
      run: |
        call "${{env.vspath}}\VC\Auxiliary\Build\vcvarsall.bat" ${{env.arch}}
        cd qt\build
        cmake --build .
    - name: install
      shell: cmd
      run: |
        call "${{env.vspath}}\VC\Auxiliary\Build\vcvarsall.bat" ${{env.arch}}
        cd qt\build
        cmake --install .
    - name: pack
      id: pack
      shell: powershell
      run: |
        cd qt\build
        7z a -tzip `
          ".\qt${{env.v}}_static_${{env.os}}_msvc2022_${{env.arch}}.zip" `
          ".\qt${{env.v}}_static_${{env.os}}_msvc2022_${{env.arch}}\*"
        Add-Content -Path $env:GITHUB_OUTPUT -Value `
          "fn=qt${{env.v}}_static_${{env.os}}_msvc2022_${{env.arch}}.zip"
        $path = (Resolve-Path "qt${{env.v}}_static_${{env.os}}_msvc2022_${{env.arch}}.zip").Path
        Add-Content -Path $env:GITHUB_OUTPUT -Value "path=${path}"
