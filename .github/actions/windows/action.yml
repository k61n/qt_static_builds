name: Build on Windows with custom compilers

inputs:
  version:
    required: true
    description: "Qt long version"
  comp:
    required: true
    description: "Compiler, e.g. llvm1706|mingw1310"
  archive:
    required: true
    description: "Filename of the compiler archive"
  link:
    required: true
    description: "Link to a folder where the compiler archive is"
outputs:
  fn:
    description: "Filename"
    value: ${{steps.build.outputs.fn}}
  path:
    description: "Path"
    value: ${{steps.build.outputs.path}}

runs:
  using: composite
  steps:
    - name: env
      shell: powershell
      run: |
        $v = '${{inputs.version}}'
        $vv = ($v -split '\.')[0..1] -join '.'
        $os = $env:RUNNER_OS.ToLower()
        $arch = $env:PROCESSOR_ARCHITECTURE.ToLower()
        Add-Content -Path $env:GITHUB_ENV -Value "v=${v}"
        Add-Content -Path $env:GITHUB_ENV -Value "vv=${vv}"
        Add-Content -Path $env:GITHUB_ENV -Value "os=${os}"
        Add-Content -Path $env:GITHUB_ENV -Value ("arch=" + ($arch -replace '^amd64$', 'x64'))
    - name: setup compiler
      shell: powershell
      run: |
        Remove-Item C:\mingw64 -Recurse -Force -ErrorAction SilentlyContinue
        Remove-Item "C:\Program Files\LLVM" -Recurse -Force -ErrorAction SilentlyContinue
        Start-BitsTransfer -Source ${{inputs.link}}${{inputs.archive}} -Destination .
        $folder = (7z l .\${{inputs.archive}} -ba `
          | Select-String '(?<=\s)([^\s\\]+)(?=\\)' `
          | Select-Object -First 1).Matches[0].Groups[1].Value
        7z x .\${{inputs.archive}} -o"C:\"
        Rename-Item -Path "C:\$folder" -NewName "mingw64" -ErrorAction SilentlyContinue
    - name: download and unpack
      shell: powershell
      run: |
        Start-BitsTransfer -Source `
          "https://download.qt.io/archive/qt/${{env.vv}}/${{env.v}}/single/qt-everywhere-src-${{env.v}}.zip" `
          -Destination .
        7z x .\qt-everywhere-src-${{env.v}}.zip -o"./"
        Rename-Item -Path "qt-everywhere-src-${{env.v}}" -NewName "qt"
        mkdir qt\build
    - id: build
      shell: powershell
      run: |
        cd qt\build
        ..\configure.bat `
          -prefix ".\qt${{env.v}}_static_${{env.os}}_${{inputs.comp}}_${{env.arch}}" `
          -release `
          -static `
          -opensource `
          -confirm-license `
          -nomake examples `
          -nomake tests `
          -skip qtwebengine `
          -no-openssl `
          -no-sql-odbc `
          -- `
          -DCMAKE_C_COMPILER="gcc.exe" -DCMAKE_CXX_COMPILER="g++.exe" -G"Ninja"
        cmake --build . --parallel ${env:NUMBER_OF_PROCESSORS}
        cmake --install .
        7z a -tzip `
          ".\qt${{env.v}}_static_${{env.os}}_${{inputs.comp}}_${{env.arch}}.zip" `
          ".\qt${{env.v}}_static_${{env.os}}_${{inputs.comp}}_${{env.arch}}\*"
        Add-Content -Path $env:GITHUB_OUTPUT -Value `
          "fn=qt${{env.v}}_static_${{env.os}}_${{inputs.comp}}_${{env.arch}}.zip"
        $path = (Resolve-Path "qt${{env.v}}_static_${{env.os}}_${{inputs.comp}}_${{env.arch}}.zip").Path
        Add-Content -Path $env:GITHUB_OUTPUT -Value "path=${path}"
